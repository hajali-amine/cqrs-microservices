version: '3.8'
services:
  mongo:
    image: mongo:4.4
    container_name: mongo
    restart: unless-stopped
    ports:
      - 26000:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=cqrs
      - MONGO_DB_USERNAME=user
      - MONGO_DB_PASSWORD=user
    volumes:
      - ./db/mongo/data:/data/db/
      - ./log/mongo/logs:/var/log/mongodb/
      - ./initdb.d:/docker-entrypoint-initdb.d/
    networks:
      - main-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: es
    environment:
      - discovery.type=single-node
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./db/es/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - main-network
  
  axon:
    image: axoniq/axonserver
    container_name: axon
    restart: on-failure
    ports: 
      - 8024:8024
      - 8124:8124
    volumes:
      - ./eventstore/data:/data
      - ./eventstore/eventdata:/eventdata
      - ./eventstore/config:/config:ro
    networks:
      - main-network
  
  query:
    container_name: query
    hostname: query
    depends_on:
      - elasticsearch
    build: ./query
    restart: on-failure
    ports:
      - "$QUERY_LOCAL_PORT:$QUERY_DOCKER_PORT"
    stdin_open: true
    tty: true
    networks:
      - main-network

  command:
    container_name: command
    hostname: command
    depends_on:
      - mongo
    build: ./command
    restart: on-failure
    ports:
      - "$COMMAND_LOCAL_PORT:$COMMAND_DOCKER_PORT"
    stdin_open: true
    tty: true
    networks:
      - main-network

networks:
  main-network:
    external:
      name: $NETWORK_NAME
